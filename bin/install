#!/usr/bin/env bash

set -Eeo pipefail

trap cleanup SIGINT SIGTERM ERR

cleanup() {
  trap - SIGINT SIGTERM ERR
  rm -rf "$MISE_INSTALL_PATH"
  echo
  echo "Cleanup: Something went wrong!"
  echo
  echo "$(caller): ${BASH_COMMAND}"
}

fail() {
  printf '%s\n' "$1" >&2
  exit "${2-1}"
}

semver_ge() {
  printf '%s\n%s\n' "$2" "$1" | sort --check=quiet --version-sort
}

install_poetry() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local flags=

  export POETRY_CONFIG_FILE="$HOME/Library/Application Support/pypoetry/config.toml"
  export POETRY_CONFIG_DIR="$HOME/Library/Application Support/pypoetry/$version"
  export POETRY_HOME="$install_path"

  if [[ "$install_type" == "version" ]]; then
    semver_ge "$MISE_INSTALL_VERSION" 1.4.0 && install_vercomp="ge" || install_vercomp="lt"
  else
    install_vercomp="ge"
  fi

  if [[ -n ${MISE_POETRY_INSTALL_URL:-} ]]; then
    install_url=$MISE_POETRY_INSTALL_URL
  elif [[ "$install_vercomp" == "ge" ]]; then
    install_url="https://install.python-poetry.org"
  else
    fail "Error: Please avoid using ancient Poetry versions prior to 1.4.0"
  fi

  if [[ "$install_type" == "version" ]]; then
    curl -sSL "$install_url" | sed 's/symlinks=False/symlinks=True/' | python3 - --version "$version" $flags
  elif [[ "$install_type" == "ref" ]]; then
    curl -sSL "$install_url" | sed 's/symlinks=False/symlinks=True/' | python3 - --git https://github.com/python-poetry/poetry.git@"$version" $flags
  else
    fail "Error: Unknown install type"
  fi

  # Ensure that Poetry behaves as expected with mise python (pyenv)
  "$install_path"/bin/poetry config virtualenvs.prefer-active-python true
  echo Adding the ML Platform configuration...
  if [[ ! -f "$POETRY_CONFIG_FILE" ]]; then
    "$install_path"/bin/poetry config virtualenvs.in-project true

    /bin/cp -rf "$POETRY_CONFIG_DIR/config.toml" "$POETRY_CONFIG_FILE"
  fi
  ln -Fs "$POETRY_CONFIG_FILE" "$POETRY_CONFIG_DIR/config.toml"

  if [[ -n "$MISE_TOOL_OPTS__PLUGINS" ]]; then
    "$install_path"/bin/poetry self add "poetry-dotenv-plugin@${MISE_TOOL_OPTS__DOTENV:-latest}"
    "$install_path"/bin/poetry self add "keyrings.google-artifactregistry-auth@${MISE_TOOL_OPTS__KEYRING:-latest}"
  fi
}

install_poetry "$MISE_INSTALL_TYPE" "$MISE_INSTALL_VERSION" "$MISE_INSTALL_PATH"
